#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é –¥–ª—è webhook
"""

import requests
import json
from prodamus import Prod–∞musAPI

def test_correct_signature():
    """–¢–µ—Å—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é"""
    
    print("üß™ –¢–ï–°–¢ –° –ü–†–ê–í–ò–õ–¨–ù–û–ô –ü–û–î–ü–ò–°–¨–Æ")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Prodamus API
    prodamus = Prod–∞musAPI()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        'order_id': '1',
        'sum': '1000.00',
        'currency': 'rub',
        'payment_status': 'success'
    }
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–æ–¥–ø–∏—Å—å
    signature = prodamus.generate_signature(
        f"{prodamus.shop_id}{test_data['order_id']}{test_data['sum']}{test_data['currency']}{test_data['payment_status']}{prodamus.secret_key}"
    )
    
    print(f"üìã –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print(f"   - order_id: {test_data['order_id']}")
    print(f"   - sum: {test_data['sum']}")
    print(f"   - currency: {test_data['currency']}")
    print(f"   - payment_status: {test_data['payment_status']}")
    print(f"   - signature: {signature}")
    print()
    
    # URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    url = "https://dashastar.pagekite.me/sales/prodamus"
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏
    headers = {
        'Sign': signature
    }
    
    print(f"üìã –¢–µ—Å—Ç 1: POST –∑–∞–ø—Ä–æ—Å —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é")
    print("-" * 50)
    
    try:
        response = requests.post(url, data=test_data, headers=headers, timeout=10)
        print(f"   - Status: {response.status_code}")
        print(f"   - Response: {response.text}")
        
        if response.status_code == 200:
            print("   ‚úÖ POST –∑–∞–ø—Ä–æ—Å —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("   ‚ùå POST –∑–∞–ø—Ä–æ—Å —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 2: –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
    print(f"üìã –¢–µ—Å—Ç 2: –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä")
    print("-" * 50)
    
    try:
        response = requests.post("http://localhost:5000/sales/prodamus", data=test_data, headers=headers, timeout=5)
        print(f"   - Status: {response.status_code}")
        print(f"   - Response: {response.text}")
        
        if response.status_code == 200:
            print("   ‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("   ‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏
    print(f"üìã –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏")
    print("-" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å
    is_valid = prodamus.verify_webhook(test_data, signature)
    print(f"   - –ü–æ–¥–ø–∏—Å—å –≤–∞–ª–∏–¥–Ω–∞: {is_valid}")
    
    if is_valid:
        print("   ‚úÖ –ü–æ–¥–ø–∏—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
    else:
        print("   ‚ùå –ü–æ–¥–ø–∏—Å—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
    
    print()
    print("üéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
    print()
    print("üìù –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("   ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å–∏")
    print("   ‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook endpoints")
    print("   ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞")

if __name__ == "__main__":
    test_correct_signature()
