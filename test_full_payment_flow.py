#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–ø–ª–∞—Ç—ã –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
"""

import os
import sys
import time
import asyncio
from datetime import datetime, timedelta

def test_payment_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ 50 —Ä—É–±–ª–µ–π"""
    print("üí≥ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ 50 —Ä—É–±–ª–µ–π...")
    print("=" * 60)
    
    try:
        from prodamus import Prod–∞musAPI
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä API
        api = Prod–∞musAPI()
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_user_id = 431292182
        test_username = "Fun_Oleg"
        
        print(f"üîß –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:")
        print(f"   - User ID: {test_user_id}")
        print(f"   - Username: {test_username}")
        print(f"   - Shop ID: {api.shop_id}")
        print(f"   - Demo Mode: {api.demo_mode}")
        print(f"   - Amount: 5000 –∫–æ–ø–µ–µ–∫ (50 —Ä—É–±–ª–µ–π)")
        print()
        
        # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂
        print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞...")
        payment_result = api.create_payment(test_user_id, test_username)
        
        if payment_result:
            print("‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"   - Payment ID: {payment_result.get('payment_id')}")
            print(f"   - Amount: {payment_result.get('amount')} –∫–æ–ø–µ–µ–∫ (50 —Ä—É–±–ª–µ–π)")
            print(f"   - Payment URL: {payment_result.get('payment_url')}")
            print()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
            payment_url = payment_result.get('payment_url')
            if payment_url and 'dashastar.payform.ru' in payment_url:
                print("‚úÖ URL –ø–ª–∞—Ç–µ–∂–∞ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
                return payment_result
            else:
                print("‚ùå URL –ø–ª–∞—Ç–µ–∂–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
                return None
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def test_webhook_processing():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook"""
    print("\nüîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook...")
    print("=" * 60)
    
    try:
        from webhook import handle_successful_payment
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ webhook
        test_webhook_data = {
            'order_id': f'test_order_{int(time.time())}',
            'amount': 5000,
            'currency': 'RUB',
            'status': 'success',
            'custom_fields': {
                'user_id': '431292182',
                'username': 'Fun_Oleg'
            }
        }
        
        print(f"üîß –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ webhook:")
        print(f"   - Order ID: {test_webhook_data['order_id']}")
        print(f"   - Amount: {test_webhook_data['amount']} –∫–æ–ø–µ–µ–∫")
        print(f"   - User ID: {test_webhook_data['custom_fields']['user_id']}")
        print(f"   - Username: {test_webhook_data['custom_fields']['username']}")
        print()
        
        print("üöÄ –û–±—Ä–∞–±–æ—Ç–∫–∞ webhook...")
        handle_successful_payment(
            test_webhook_data['order_id'],
            test_webhook_data['amount'],
            test_webhook_data
        )
        
        print("‚úÖ Webhook –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook: {e}")
        return False

def test_subscription_activation():
    """–¢–µ—Å—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏"""
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏...")
    print("=" * 60)
    
    try:
        from database import Database
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É
        db = Database()
        test_user_id = 431292182
        test_order_id = f'test_subscription_{int(time.time())}'
        test_amount = 5000
        
        print(f"üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–∏:")
        print(f"   - User ID: {test_user_id}")
        print(f"   - Order ID: {test_order_id}")
        print(f"   - Amount: {test_amount} –∫–æ–ø–µ–µ–∫")
        print()
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É
        db.create_subscription(test_user_id, test_order_id, test_amount)
        print("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
        subscription = db.get_active_subscription(test_user_id)
        if subscription:
            print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞–π–¥–µ–Ω–∞:")
            print(f"   - ID: {subscription.id}")
            print(f"   - User ID: {subscription.user_id}")
            print(f"   - Amount: {subscription.amount} –∫–æ–ø–µ–µ–∫")
            print(f"   - Expires: {subscription.expires_at}")
            print(f"   - Status: {subscription.status}")
            return True
        else:
            print("‚ùå –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

def test_channel_access():
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É"""
    print("\nüì∫ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É...")
    print("=" * 60)
    
    try:
        from config import CHANNEL_ID, CHANNEL_USERNAME, CHANNEL_INVITE_LINK
        
        print(f"üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–∞–Ω–∞–ª–∞:")
        print(f"   - Channel ID: {CHANNEL_ID}")
        print(f"   - Channel Username: {CHANNEL_USERNAME}")
        print(f"   - Invite Link: {CHANNEL_INVITE_LINK}")
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        if CHANNEL_ID and CHANNEL_ID != '-1001234567890':
            print("‚úÖ ID –∫–∞–Ω–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        else:
            print("‚ö†Ô∏è ID –∫–∞–Ω–∞–ª–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–π)")
        
        if CHANNEL_INVITE_LINK and 't.me' in CHANNEL_INVITE_LINK:
            print("‚úÖ –°—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        else:
            print("‚ö†Ô∏è –°—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        
        print("\nüìù –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("   1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π CHANNEL_ID –≤ config.py")
        print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞")
        print("   3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É: {e}")
        return False

def test_demo_cards():
    """–¢–µ—Å—Ç –¥–µ–º–æ-–∫–∞—Ä—Ç"""
    print("\nüß™ –¢–µ—Å—Ç–æ–≤—ã–µ –∫–∞—Ä—Ç—ã –¥–ª—è –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞:")
    print("=" * 60)
    
    demo_cards = [
        {"name": "–ú–ò–†", "number": "2202 2050 0001 2424", "expiry": "05/35", "cvc": "669"},
        {"name": "MasterCard", "number": "5469 9801 0004 8525", "expiry": "05/26", "cvc": "041"},
        {"name": "Visa", "number": "4006 8009 0096 2514", "expiry": "05/26", "cvc": "941"},
        {"name": "–ú–æ–Ω–µ—Ç–∞", "number": "2200 2400 0000 0006", "expiry": "12/24", "cvc": "123"},
        {"name": "–ì–∞–∑–ø—Ä–æ–º–ë–∞–Ω–∫", "number": "4242 4242 4242 4242", "expiry": "12/30", "cvc": "123"}
    ]
    
    for card in demo_cards:
        print(f"üì± {card['name']}: {card['number']} ({card['expiry']}, CVC: {card['cvc']})")
    
    print("\nüí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:")
    print("   1. –û—Ç–∫—Ä–æ–π—Ç–µ URL –ø–ª–∞—Ç–µ–∂–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("   2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    print("   3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–Ω—É –∏–∑ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–∞—Ä—Ç")
    print("   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏–µ webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    print("   5. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª")
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –¢–ï–°–¢ –ü–û–õ–ù–û–ì–û –ü–†–û–¶–ï–°–°–ê –û–ü–õ–ê–¢–´ –ò –ê–ö–¢–ò–í–ê–¶–ò–ò –ü–û–î–ü–ò–°–ö–ò")
    print("=" * 70)
    print(f"–í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"–°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞: 50 —Ä—É–±–ª–µ–π (5000 –∫–æ–ø–µ–µ–∫)")
    print(f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: 30 –¥–Ω–µ–π")
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    tests = [
        ("–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞", test_payment_creation),
        ("–û–±—Ä–∞–±–æ—Ç–∫–∞ webhook", test_webhook_processing),
        ("–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏", test_subscription_activation),
        ("–î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É", test_channel_access),
        ("–î–µ–º–æ-–∫–∞—Ä—Ç—ã", test_demo_cards)
    ]
    
    results = []
    
    for test_name, test_func in tests:
        try:
            result = test_func()
            results.append((test_name, result is not None and result is not False))
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ '{test_name}': {e}")
            results.append((test_name, False))
    
    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏
    print("\n" + "=" * 70)
    print("üìã –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    
    passed = 0
    for test_name, success in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if success else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"   {test_name}: {status}")
        if success:
            passed += 1
    
    print(f"\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{len(results)} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == len(results):
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("\nüìù –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:")
        print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ webhook —Å–µ—Ä–≤–µ—Ä: python3 start_webhook.py")
        print("   2. –û—Ç–∫—Ä–æ–π—Ç–µ URL –ø–ª–∞—Ç–µ–∂–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        print("   3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–∞—Ä—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã")
        print("   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª")
    else:
        print(f"\n‚ö†Ô∏è {len(results) - passed} —Ç–µ—Å—Ç–æ–≤ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–æ")
        print("\nüìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ config.py")
        print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        print("   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π CHANNEL_ID")

if __name__ == "__main__":
    main()
