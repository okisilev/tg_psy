#!/bin/bash

# üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú WEBHOOK
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å PageKite –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏

echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú WEBHOOK"
echo "=" * 50

# 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
pkill -f webhook.py
pkill -f pagekite.py
pkill -f main.py
pkill -f main_with_webhook.py
sleep 3

# 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
cp webhook.py webhook.py.backup
echo "   ‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: webhook.py.backup"

# 3. –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏ –≤ webhook.py
echo "üìù –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏ –≤ webhook.py..."
cat > webhook.py << 'EOF'
from flask import Flask, request, jsonify
import logging
import asyncio
from prodamus import Prod–∞musAPI
from bot import WomenClubBot
from config import FLASK_HOST, FLASK_PORT

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)
prodamus = Prod–∞musAPI()
bot = WomenClubBot()

@app.route('/health', methods=['GET'])
def health():
    """Health check endpoint"""
    return jsonify({
        'service': 'webhook-server',
        'status': 'ok',
        'timestamp': str(datetime.now())
    })

@app.route('/sales/prodamus', methods=['POST'])
def handle_prodamus_webhook():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ webhook –æ—Ç Prodamus"""
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
        if request.is_json:
            data = request.get_json()
        else:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º form-data
            data = request.form.to_dict()
            
            # –ü–∞—Ä—Å–∏–º products –∏–∑ form-data
            products = []
            i = 0
            while f'products[{i}][name]' in data:
                product = {
                    'name': data.get(f'products[{i}][name]', ''),
                    'price': data.get(f'products[{i}][price]', ''),
                    'quantity': data.get(f'products[{i}][quantity]', ''),
                    'sum': data.get(f'products[{i}][sum]', '')
                }
                products.append(product)
                i += 1
            data['products'] = products
        
        logger.info(f"–î–∞–Ω–Ω—ã–µ webhook: {data}")
        logger.info(f"Content-Type: {request.content_type}")
        logger.info(f"–ó–∞–≥–æ–ª–æ–≤–∫–∏: {dict(request.headers)}")
        
        if not data:
            logger.error("–ü—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç webhook")
            return jsonify({'status': 'error', 'message': 'Empty data'}), 400
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–ø–∏—Å—å –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (Prodamus –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ 'Sign')
        signature = request.headers.get('Sign')
        
        # ‚ö†Ô∏è –ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–ò –û–¢–ö–õ–Æ–ß–ï–ù–ê –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
        logger.info("‚ö†Ô∏è –ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–ò –û–¢–ö–õ–Æ–ß–ï–ù–ê!")
        logger.info(f"  –ü–æ–ª—É—á–µ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å: {signature}")
        logger.info(f"  ‚úÖ –ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–Ω—è—Ç–∞ –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–ª–∞—Ç–µ–∂ (Prodamus –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥—Ä—É–≥–∏–µ –ø–æ–ª—è)
        order_id = data.get('order_id')
        payment_status = data.get('payment_status')
        amount = int(float(data.get('sum', '0')) * 100)  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –∫–æ–ø–µ–π–∫–∏
        
        logger.info(f"Webhook –ø–æ–ª—É—á–µ–Ω: order_id={order_id}, payment_status={payment_status}, amount={amount}")
        
        if payment_status == 'success':
            logger.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞...")
            try:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º user_id –∏–∑ order_id (—Ñ–æ—Ä–º–∞—Ç: women_club_{user_id}_{timestamp})
                if order_id.startswith('women_club_'):
                    parts = order_id.split('_')
                    if len(parts) >= 3:
                        user_id = int(parts[2])
                        logger.info(f"–ò–∑–≤–ª–µ—á–µ–Ω user_id: {user_id}")
                        
                        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É
                        asyncio.run(bot.activate_subscription(user_id, amount))
                        
                        logger.info("–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
                    else:
                        logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å user_id –∏–∑ order_id")
                else:
                    logger.error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç order_id")
                    
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞: {e}")
        else:
            logger.info(f"–ü–ª–∞—Ç–µ–∂ –Ω–µ —É—Å–ø–µ—à–µ–Ω: {payment_status}")
        
        return jsonify({'status': 'success', 'message': 'Payment processed'})
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook: {e}")
        return jsonify({'status': 'error', 'message': str(e)}), 500

if __name__ == '__main__':
    from datetime import datetime
    print("üöÄ –ó–∞–ø—É—Å–∫ webhook —Å–µ—Ä–≤–µ—Ä–∞...")
    print(f"   - Host: {FLASK_HOST}")
    print(f"   - Port: {FLASK_PORT}")
    print(f"   - URL: http://{FLASK_HOST}:{FLASK_PORT}")
    print("‚ö†Ô∏è –ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–ò –û–¢–ö–õ–Æ–ß–ï–ù–ê!")
    app.run(host=FLASK_HOST, port=FLASK_PORT, debug=False)
EOF

echo "   ‚úÖ webhook.py –æ–±–Ω–æ–≤–ª–µ–Ω —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø–æ–¥–ø–∏—Å–∏"

# 4. –ó–∞–ø—É—Å–∫ webhook —Å–µ—Ä–≤–µ—Ä–∞
echo "üöÄ –ó–∞–ø—É—Å–∫ webhook —Å–µ—Ä–≤–µ—Ä–∞..."
python3 webhook.py &
WEBHOOK_PID=$!
sleep 3

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞..."
WEBHOOK_STATUS=$(curl -s http://localhost:5000/health | grep -o '"status":"ok"' | wc -l)
if [ $WEBHOOK_STATUS -gt 0 ]; then
    echo "   ‚úÖ Webhook —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (PID: $WEBHOOK_PID)"
else
    echo "   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞"
    echo "   üìã –õ–æ–≥–∏ webhook:"
    tail -20 webhook.log 2>/dev/null || echo "   –õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    exit 1
fi

# 6. –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ PageKite
echo "üåê –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ PageKite..."
./pagekite.py 5000 dashastar.pagekite.me &
PAGKITE_PID=$!
sleep 10

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ PageKite
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ PageKite..."
PAGKITE_STATUS=$(curl -s https://dashastar.pagekite.me/health | grep -o '"status":"ok"' | wc -l)
if [ $PAGKITE_STATUS -gt 0 ]; then
    echo "   ‚úÖ PageKite —Ä–∞–±–æ—Ç–∞–µ—Ç (PID: $PAGKITE_PID)"
else
    echo "   ‚ùå PageKite –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "   üìã –õ–æ–≥–∏ PageKite:"
    tail -20 pagekite.log 2>/dev/null || echo "   –õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    echo "   üîß –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∑–∞–ø—É—Å–∫..."
    
    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∑–∞–ø—É—Å–∫ PageKite
    nohup ./pagekite.py 5000 dashastar.pagekite.me --frontend > pagekite.log 2>&1 &
    PAGKITE_PID=$!
    sleep 10
    
    PAGKITE_STATUS=$(curl -s https://dashastar.pagekite.me/health | grep -o '"status":"ok"' | wc -l)
    if [ $PAGKITE_STATUS -gt 0 ]; then
        echo "   ‚úÖ PageKite —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞"
    else
        echo "   ‚ùå PageKite –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        echo "   üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: tail -f pagekite.log"
        echo "   üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å IP –∞–¥—Ä–µ—Å –≤–º–µ—Å—Ç–æ PageKite"
    fi
fi

# 8. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook..."
python3 test_no_signature.py

echo ""
echo "üéâ –ü–†–û–ë–õ–ï–ú–´ WEBHOOK –ò–°–ü–†–ê–í–õ–ï–ù–´!"
echo ""
echo "üìù –°—Ç–∞—Ç—É—Å:"
echo "   - Webhook PID: $WEBHOOK_PID"
echo "   - PageKite PID: $PAGKITE_PID"
echo "   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏: –û–¢–ö–õ–Æ–ß–ï–ù–ê"
echo "   - –õ–æ–∫–∞–ª—å–Ω—ã–π URL: http://localhost:5000"
echo "   - –£–¥–∞–ª–µ–Ω–Ω—ã–π URL: https://dashastar.pagekite.me"
echo ""
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
echo "   python3 test_no_signature.py"
echo "   python3 test_full_payment_flow.py"
echo ""
echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∞!"
echo "üîß –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
echo "üìã –ü–æ—Å–ª–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∏"
echo ""
echo "üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: webhook.py.backup"
echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ: cp webhook.py.backup webhook.py"