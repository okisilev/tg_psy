#!/bin/bash

# üîß –û–ë–ù–û–í–õ–ï–ù–ò–ï –ü–†–û–í–ï–†–ö–ò –ü–û–î–ü–ò–°–ò
# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ prodamus.py —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏

echo "üîß –û–ë–ù–û–í–õ–ï–ù–ò–ï –ü–†–û–í–ï–†–ö–ò –ü–û–î–ü–ò–°–ò"
echo "=" * 50

# 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞
echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞..."
pkill -f webhook.py
sleep 3

# 2. –°–æ–∑–¥–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ prodamus.py
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ prodamus.py..."
cat > prodamus.py << 'EOF'
import hashlib
import hmac
import requests
import json
from typing import Dict, Optional
from config import PRODAMUS_SHOP_ID, PRODAMUS_SECRET_KEY, PRODAMUS_API_URL, PRODAMUS_DEMO_MODE, PRODAMUS_WEBHOOK_URL

class Prod–∞musAPI:
    def __init__(self):
        self.shop_id = PRODAMUS_SHOP_ID
        self.secret_key = PRODAMUS_SECRET_KEY
        self.api_url = PRODAMUS_API_URL
        self.demo_mode = PRODAMUS_DEMO_MODE
        self.webhook_url = PRODAMUS_WEBHOOK_URL
        
    def generate_signature(self, data: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è Prodamus"""
        return hmac.new(
            self.secret_key.encode('utf-8'),
            data.encode('utf-8'),
            hashlib.sha256
        ).hexdigest()
    
    def create_payment(self, order_id: str, amount: int, description: str, user_id: int) -> Optional[str]:
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –≤ Prodamus"""
        try:
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å—É–º–º—É –≤ —Ä—É–±–ª–∏
            amount_rub = amount / 100
            
            # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è Prodamus
            params = {
                'shop_id': self.shop_id,
                'order_id': order_id,
                'sum': str(amount_rub),
                'currency': 'rub',
                'description': description,
                'customer_phone': '',  # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                'customer_email': '',  # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                'success_url': f'https://t.me/your_bot_username',  # URL –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
                'failure_url': f'https://t.me/your_bot_username',  # URL –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω–æ–π –æ–ø–ª–∞—Ç—ã
                'webhook_url': self.webhook_url,
                'payment_method': 'card',
                'payment_system': 'all'
            }
            
            # –î–æ–±–∞–≤–ª—è–µ–º demo_mode –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω
            if self.demo_mode:
                params['demo_mode'] = '1'
            
            # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å—å
            sign_data = f"{self.shop_id}{order_id}{amount_rub}rub{self.secret_key}"
            params['sign'] = self.generate_signature(sign_data)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è GET –∑–∞–ø—Ä–æ—Å–∞
            payment_url = f"{self.api_url}?" + "&".join([f"{k}={v}" for k, v in params.items()])
            
            print(f"–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ Prodamus:")
            print(f"  Order ID: {order_id}")
            print(f"  Amount: {amount_rub} —Ä—É–±")
            print(f"  Description: {description}")
            print(f"  Demo Mode: {self.demo_mode}")
            print(f"  Webhook URL: {self.webhook_url}")
            print(f"  Payment URL: {payment_url}")
            
            return payment_url
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: {e}")
            return None
    
    def verify_webhook(self, data: Dict, signature: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ webhook –æ—Ç –ü—Ä–æ–¥–∞–º—É—Å"""
        try:
            print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏:")
            print(f"  –ü–æ–ª—É—á–µ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å: {signature}")
            print(f"  –î–∞–Ω–Ω—ã–µ: {data}")
            
            # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∏
            variants = [
                # –í–∞—Ä–∏–∞–Ω—Ç 1: shop_id + order_id + sum + currency + payment_status + secret_key
                f"{self.shop_id}{data.get('order_id', '')}{data.get('sum', '')}{data.get('currency', '')}{data.get('payment_status', '')}{self.secret_key}",
                
                # –í–∞—Ä–∏–∞–Ω—Ç 2: order_id + sum + currency + payment_status + secret_key
                f"{data.get('order_id', '')}{data.get('sum', '')}{data.get('currency', '')}{data.get('payment_status', '')}{self.secret_key}",
                
                # –í–∞—Ä–∏–∞–Ω—Ç 3: order_id + sum + payment_status + secret_key
                f"{data.get('order_id', '')}{data.get('sum', '')}{data.get('payment_status', '')}{self.secret_key}",
                
                # –í–∞—Ä–∏–∞–Ω—Ç 4: sum + payment_status + secret_key
                f"{data.get('sum', '')}{data.get('payment_status', '')}{self.secret_key}",
                
                # –í–∞—Ä–∏–∞–Ω—Ç 5: order_id + payment_status + secret_key
                f"{data.get('order_id', '')}{data.get('payment_status', '')}{self.secret_key}",
                
                # –í–∞—Ä–∏–∞–Ω—Ç 6: —Ç–æ–ª—å–∫–æ order_id + secret_key
                f"{data.get('order_id', '')}{self.secret_key}",
                
                # –í–∞—Ä–∏–∞–Ω—Ç 7: —Ç–æ–ª—å–∫–æ sum + secret_key
                f"{data.get('sum', '')}{self.secret_key}",
                
                # –í–∞—Ä–∏–∞–Ω—Ç 8: —Ç–æ–ª—å–∫–æ payment_status + secret_key
                f"{data.get('payment_status', '')}{self.secret_key}",
                
                # –í–∞—Ä–∏–∞–Ω—Ç 9: –≤—Å–µ –ø–æ–ª—è –±–µ–∑ shop_id
                f"{data.get('order_id', '')}{data.get('sum', '')}{data.get('currency', '')}{data.get('payment_status', '')}{data.get('customer_email', '')}{self.secret_key}",
                
                # –í–∞—Ä–∏–∞–Ω—Ç 10: –≤—Å–µ –ø–æ–ª—è —Å shop_id
                f"{self.shop_id}{data.get('order_id', '')}{data.get('sum', '')}{data.get('currency', '')}{data.get('payment_status', '')}{data.get('customer_email', '')}{self.secret_key}"
            ]
            
            for i, variant_data in enumerate(variants, 1):
                expected_signature = self.generate_signature(variant_data)
                print(f"  –í–∞—Ä–∏–∞–Ω—Ç {i}: {variant_data}")
                print(f"  –ü–æ–¥–ø–∏—Å—å {i}: {expected_signature}")
                
                if hmac.compare_digest(signature, expected_signature):
                    print(f"  ‚úÖ –ü–æ–¥–ø–∏—Å—å —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –≤–∞—Ä–∏–∞–Ω—Ç–æ–º {i}")
                    return True
            
            print("  ‚ùå –ü–æ–¥–ø–∏—Å—å –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –Ω–∏ —Å –æ–¥–Ω–∏–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º")
            return False

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏: {e}")
            return False
    
    def get_payment_status(self, order_id: str) -> Optional[Dict]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞ –∏–∑ API Prodamus"""
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π API Prodamus –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
            api_url = f"https://api.prodamus.ru/v3/payments/{order_id}"
            
            headers = {
                'Authorization': f'Bearer {self.secret_key}',
                'X-Shop-Id': self.shop_id,
                'Content-Type': 'application/json'
            }
            
            print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ API Prodamus:")
            print(f"  - URL: {api_url}")
            print(f"  - Order ID: {order_id}")
            print(f"  - Shop ID: {self.shop_id}")
            
            response = requests.get(api_url, headers=headers, timeout=10)
            
            print(f"  - Response status: {response.status_code}")
            print(f"  - Response: {response.text}")
            
            if response.status_code == 200:
                data = response.json()
                return {
                    'status': 'success',
                    'amount': data.get('amount', 0),
                    'order_id': order_id,
                    'source': 'api'
                }
            else:
                print(f"  - API Error: {response.status_code}")
                return None
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞: {e}")
            return None
    
    def set_activity(self, order_id: str, activity: str) -> bool:
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞"""
        try:
            # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            print(f"–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞ {order_id}: {activity}")
            return True
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {e}")
            return False
    
    def set_subscription_payment_date(self, order_id: str, payment_date: str) -> bool:
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç—ã –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏"""
        try:
            # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∞—Ç—ã –ø–ª–∞—Ç–µ–∂–∞
            print(f"–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç—ã –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ {order_id}: {payment_date}")
            return True
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∞—Ç—ã –ø–ª–∞—Ç–µ–∂–∞: {e}")
            return False
EOF

echo "‚úÖ prodamus.py –æ–±–Ω–æ–≤–ª–µ–Ω"

# 3. –ó–∞–ø—É—Å–∫ webhook —Å–µ—Ä–≤–µ—Ä–∞
echo "üöÄ –ó–∞–ø—É—Å–∫ webhook —Å–µ—Ä–≤–µ—Ä–∞..."
python3 webhook.py &
WEBHOOK_PID=$!
sleep 3

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞..."
curl -s http://localhost:5000/health

if [ $? -eq 0 ]; then
    echo "   ‚úÖ Webhook —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (PID: $WEBHOOK_PID)"
else
    echo "   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞"
    exit 1
fi

# 5. –ó–∞–ø—É—Å–∫ PageKite
echo "üåê –ó–∞–ø—É—Å–∫ PageKite..."
./pagekite.py 5000 dashastar.pagekite.me &
PAGKITE_PID=$!
sleep 10

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ PageKite
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ PageKite..."
curl -s https://dashastar.pagekite.me/health

if [ $? -eq 0 ]; then
    echo "   ‚úÖ PageKite —Ä–∞–±–æ—Ç–∞–µ—Ç (PID: $PAGKITE_PID)"
else
    echo "   ‚ùå PageKite –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

echo ""
echo "üéâ –ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–ò –û–ë–ù–û–í–õ–ï–ù–ê!"
echo ""
echo "üìù –°—Ç–∞—Ç—É—Å:"
echo "   - Webhook PID: $WEBHOOK_PID"
echo "   - PageKite PID: $PAGKITE_PID"
echo "   - –õ–æ–∫–∞–ª—å–Ω—ã–π URL: http://localhost:5000"
echo "   - –£–¥–∞–ª–µ–Ω–Ω—ã–π URL: https://dashastar.pagekite.me"
echo ""
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
echo "   python3 test_correct_signature.py"
echo "   python3 check_webhook_status.py"
echo ""
echo "üìã –¢–µ–ø–µ—Ä—å webhook –±—É–¥–µ—Ç –ø—Ä–æ–±–æ–≤–∞—Ç—å 10 —Ä–∞–∑–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ–¥–ø–∏—Å–∏!"
