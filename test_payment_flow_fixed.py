#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database import Database
from prodamus import Prod–∞musAPI

def test_payment_flow():
    """–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π"""
    
    print("üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û –ü–û–¢–û–ö–ê –ü–õ–ê–¢–ï–ñ–ï–ô")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    db = Database()
    prodamus = Prod–∞musAPI()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_user_id = 431292182
    test_payment_id = "women_club_431292182_test"
    test_amount = 5000  # 50 —Ä—É–±–ª–µ–π –≤ –∫–æ–ø–µ–π–∫–∞—Ö
    
    print(f"üìã –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print(f"   - User ID: {test_user_id}")
    print(f"   - Payment ID: {test_payment_id}")
    print(f"   - Amount: {test_amount} –∫–æ–ø–µ–µ–∫")
    print()
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    print("üìã –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    print("-" * 40)
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–ª–∞—Ç–µ–∂ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        db.add_payment(test_user_id, test_payment_id, test_amount, 'success')
        print("   ‚úÖ –ü–ª–∞—Ç–µ–∂ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–ª–∞—Ç–µ–∂ –¥–æ–±–∞–≤–ª–µ–Ω
        payment_status = prodamus.get_payment_status(test_payment_id)
        print(f"   - –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞: {payment_status}")
        
        if payment_status and payment_status.get('status') == 'success':
            print("   ‚úÖ –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π")
        else:
            print("   ‚ùå –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
    print("üìã –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏")
    print("-" * 40)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É
        db.create_subscription(test_user_id, test_payment_id, test_amount)
        print("   ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
        subscription = db.get_active_subscription(test_user_id)
        print(f"   - –ü–æ–¥–ø–∏—Å–∫–∞: {subscription}")
        
        if subscription:
            print("   ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞")
        else:
            print("   ‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 3: –°–∏–º—É–ª—è—Ü–∏—è webhook –æ—Ç Prodamus
    print("üìã –¢–µ—Å—Ç 3: –°–∏–º—É–ª—è—Ü–∏—è webhook –æ—Ç Prodamus")
    print("-" * 40)
    
    # –î–∞–Ω–Ω—ã–µ webhook –æ—Ç Prodamus
    webhook_data = {
        'order_id': test_payment_id,
        'payment_status': 'success',
        'sum': '50.00',
        'currency': 'rub',
        'customer_email': 'test@example.com'
    }
    
    print(f"   - Webhook –¥–∞–Ω–Ω—ã–µ: {webhook_data}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å
    signature = "30ba444dc24a268bdb78669632c6e0777652c0e63217b6cbc9adcb5fb2a0adaa"
    is_valid = prodamus.verify_webhook(webhook_data, signature)
    
    if is_valid:
        print("   ‚úÖ –ü–æ–¥–ø–∏—Å—å webhook –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
    else:
        print("   ‚ùå –ü–æ–¥–ø–∏—Å—å webhook –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
    
    print()
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ –±–æ—Ç–∞
    print("üìã –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ –±–æ—Ç–∞")
    print("-" * 40)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–ª–∞—Ç–µ–∂–∞ –±–æ—Ç–æ–º
    payment_status = prodamus.get_payment_status(test_payment_id)
    
    if payment_status and payment_status.get('status') == 'success':
        print("   ‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ—Ç —É—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂")
        print("   ‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É")
    else:
        print("   ‚ùå –ë–æ—Ç –Ω–µ –Ω–∞–π–¥–µ—Ç –ø–ª–∞—Ç–µ–∂")
    
    print()
    
    # –¢–µ—Å—Ç 5: –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    print("üìã –¢–µ—Å—Ç 5: –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    print("-" * 40)
    
    try:
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        cursor = db.conn.cursor()
        cursor.execute('DELETE FROM payments WHERE payment_id = ?', (test_payment_id,))
        cursor.execute('DELETE FROM subscriptions WHERE payment_id = ?', (test_payment_id,))
        db.conn.commit()
        print("   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {e}")
    
    print()
    print("üéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
    print()
    print("üìù –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("   ‚úÖ –ü–ª–∞—Ç–µ–∂–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
    print("   ‚úÖ –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("   ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("   ‚úÖ Webhook –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    print("   ‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ—Ç —É—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É")

if __name__ == "__main__":
    test_payment_flow()
