#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç Prodamus
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from prodamus import Prod–∞musAPI

def test_new_signature():
    """–¢–µ—Å—Ç –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞"""
    
    print("üîê –¢–ï–°–¢ –ü–û–î–ü–ò–°–ò –î–õ–Ø –ù–û–í–û–ì–û –ó–ê–ü–†–û–°–ê")
    print("=" * 50)
    
    # –î–∞–Ω–Ω—ã–µ –∏–∑ –Ω–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    test_data = {
        'order_id': '35994004',
        'sum': '50.00',
        'currency': 'rub',
        'payment_status': 'success'
    }
    
    # –ü–æ–ª—É—á–µ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å –æ—Ç Prodamus
    received_signature = "30ba444dc24a268bdb78669632c6e0777652c0e63217b6cbc9adcb5fb2a0adaa"
    
    print(f"üìã –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:")
    for key, value in test_data.items():
        print(f"   {key}: {value}")
    
    print(f"\nüîß –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏:")
    
    # –°–æ–∑–¥–∞–µ–º API –æ–±—ä–µ–∫—Ç
    api = Prod–∞musAPI()
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –ø–æ–¥–ø–∏—Å–∏
    sign_data = f"{api.shop_id}{test_data['order_id']}{test_data['sum']}{test_data['currency']}{test_data['payment_status']}{api.secret_key}"
    expected_signature = api.generate_signature(sign_data)
    
    print(f"   –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–ø–∏—Å–∏: {sign_data}")
    print(f"   –ü–æ–ª—É—á–µ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å: {received_signature}")
    print(f"   –û–∂–∏–¥–∞–µ–º–∞—è –ø–æ–¥–ø–∏—Å—å: {expected_signature}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å
    is_valid = api.verify_webhook(test_data, received_signature)
    
    print(f"\nüß™ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    if is_valid:
        print("   ‚úÖ –ü–æ–¥–ø–∏—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!")
    else:
        print("   ‚ùå –ü–æ–¥–ø–∏—Å—å –Ω–µ–≤–µ—Ä–Ω–∞!")
    
    print(f"\nüîó –¢–µ—Å—Ç webhook:")
    print(f"   curl -X POST http://82.147.71.244:5000/sales/prodamus \\")
    print(f"     -H 'Content-Type: application/json' \\")
    print(f"     -H 'Sign: {received_signature}' \\")
    print(f"     -d '{test_data}'")
    
    return is_valid

if __name__ == "__main__":
    test_new_signature()
