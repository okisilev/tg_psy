#!/bin/bash

# üîß –û–¢–ö–õ–Æ–ß–ï–ù–ò–ï –ü–†–û–í–ï–†–ö–ò –ü–û–î–ü–ò–°–ò PRODAMUS
# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è Prodamus webhook

echo "üîß –û–¢–ö–õ–Æ–ß–ï–ù–ò–ï –ü–†–û–í–ï–†–ö–ò –ü–û–î–ü–ò–°–ò PRODAMUS"
echo "=" * 50

# 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞
echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞..."
pkill -f webhook.py
sleep 3

# 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
cp prodamus.py prodamus.py.backup
echo "   ‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: prodamus.py.backup"

# 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ prodamus.py
echo "üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ prodamus.py..."
cat > prodamus.py << 'EOF'
import hmac
import hashlib
import requests
from typing import Dict, Optional
from config import (
    PRODAMUS_SHOP_ID, PRODAMUS_SECRET_KEY, PRODAMUS_API_URL, 
    PRODAMUS_DEMO_MODE, PRODAMUS_WEBHOOK_URL, SUBSCRIPTION_PRICE
)

class Prod–∞musAPI:
    def __init__(self):
        self.shop_id = PRODAMUS_SHOP_ID
        self.secret_key = PRODAMUS_SECRET_KEY
        self.api_url = PRODAMUS_API_URL
        self.demo_mode = PRODAMUS_DEMO_MODE
        self.webhook_url = PRODAMUS_WEBHOOK_URL
        
    def generate_signature(self, data: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è Prodamus"""
        return hmac.new(
            self.secret_key.encode('utf-8'),
            data.encode('utf-8'),
            hashlib.sha256
        ).hexdigest()
    
    def create_payment(self, order_id: str, amount: int, description: str, user_id: int) -> Optional[str]:
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –≤ Prodamus"""
        try:
            amount_rub = amount / 100  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–ø–µ–π–∫–∏ –≤ —Ä—É–±–ª–∏
            
            print(f"–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ Prodamus:")
            print(f"  Order ID: {order_id}")
            print(f"  Amount: {amount_rub} —Ä—É–±")
            print(f"  Description: {description}")
            print(f"  Demo Mode: {self.demo_mode}")
            print(f"  Webhook URL: {self.webhook_url}")
            
            # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è Prodamus —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
            params = {
                'shop_id': self.shop_id,
                'order_id': order_id,
                'sum': str(amount_rub),
                'currency': 'rub',
                'description': description,
                'customer_phone': '',  # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                'customer_email': '',  # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                'success_url': f'https://t.me/your_bot_username',  # URL –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
                'failure_url': f'https://t.me/your_bot_username',  # URL –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω–æ–π –æ–ø–ª–∞—Ç—ã
                'webhook_url': self.webhook_url,
                'payment_method': 'card',
                'payment_system': 'all'
            }
            
            # –î–æ–±–∞–≤–ª—è–µ–º demo_mode –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω
            if self.demo_mode:
                params['demo_mode'] = '1'
            
            # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å—å –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
            sign_data = f"{self.shop_id}{order_id}{str(amount_rub)}rub{self.secret_key}"
            signature = self.generate_signature(sign_data)
            params['signature'] = signature
            
            print(f"  Signature: {signature}")
            print(f"  Order ID: {order_id}")
            print(f"  Amount: {SUBSCRIPTION_PRICE} –∫–æ–ø–µ–µ–∫")
            print(f"  Demo Mode: {self.demo_mode}")
            
            # –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞
            base_url = "https://dashastar.payform.ru/"
            payment_url = base_url + "?" + "&".join([f"{k}={v}" for k, v in params.items() if v])
            
            print(f"Payment URL: {payment_url}")
            
            return payment_url
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: {e}")
            return None
    
    def verify_webhook(self, data: Dict, signature: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ webhook –æ—Ç –ü—Ä–æ–¥–∞–º—É—Å - –û–¢–ö–õ–Æ–ß–ï–ù–ê"""
        print(f"‚ö†Ô∏è –ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–ò –û–¢–ö–õ–Æ–ß–ï–ù–ê!")
        print(f"  –ü–æ–ª—É—á–µ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å: {signature}")
        print(f"  –î–∞–Ω–Ω—ã–µ: {data}")
        print(f"  ‚úÖ –ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–Ω—è—Ç–∞ –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏")
        return True
    
    def get_payment_status(self, order_id: str) -> Optional[Dict]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞ –∏–∑ API Prodamus"""
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π API Prodamus –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
            url = f"https://api.prodamus.ru/v3/payments/{order_id}"
            
            # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å—å –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
            sign_data = f"{self.shop_id}{order_id}{self.secret_key}"
            signature = self.generate_signature(sign_data)
            
            # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
            headers = {
                'Authorization': f'Bearer {signature}',
                'Content-Type': 'application/json',
                'X-Shop-Id': self.shop_id
            }
            
            print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ API Prodamus:")
            print(f"  - URL: {url}")
            print(f"  - Order ID: {order_id}")
            print(f"  - Shop ID: {self.shop_id}")
            print(f"  - Signature: {signature}")
            
            response = requests.get(url, headers=headers, timeout=10)
            print(f"  - Response status: {response.status_code}")
            
            if response.status_code == 200:
                payment_data = response.json()
                print(f"  - Payment data: {payment_data}")
                return payment_data
            else:
                print(f"  - Error response: {response.text}")
                return None
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞: {e}")
            return None
EOF

echo "   ‚úÖ prodamus.py –æ–±–Ω–æ–≤–ª–µ–Ω"

# 4. –ó–∞–ø—É—Å–∫ webhook —Å–µ—Ä–≤–µ—Ä–∞
echo "üöÄ –ó–∞–ø—É—Å–∫ webhook —Å–µ—Ä–≤–µ—Ä–∞..."
python3 webhook.py &
WEBHOOK_PID=$!
sleep 3

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞..."
curl -s http://localhost:5000/health

if [ $? -eq 0 ]; then
    echo "   ‚úÖ Webhook —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (PID: $WEBHOOK_PID)"
else
    echo "   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞"
    exit 1
fi

# 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook..."
python3 test_ip_webhook.py

echo ""
echo "üéâ –ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–ò –û–¢–ö–õ–Æ–ß–ï–ù–ê!"
echo ""
echo "üìù –°—Ç–∞—Ç—É—Å:"
echo "   - Webhook PID: $WEBHOOK_PID"
echo "   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏: –û–¢–ö–õ–Æ–ß–ï–ù–ê"
echo "   - –õ–æ–∫–∞–ª—å–Ω—ã–π URL: http://localhost:5000"
echo "   - –í–Ω–µ—à–Ω–∏–π URL: http://82.147.71.244:5000"
echo ""
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
echo "   python3 test_ip_webhook.py"
echo "   python3 test_full_payment_flow.py"
echo ""
echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∞!"
echo "üîß –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
echo "üìã –ü–æ—Å–ª–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∏"
echo ""
echo "üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: prodamus.py.backup"
echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ: cp prodamus.py.backup prodamus.py"
